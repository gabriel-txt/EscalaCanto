generator client {
  provider = "prisma-client"
  output   = "./prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Artistas {
  id      String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nome    String             @unique(map: "artistas_nome_unico")
  musicas Artistas_Musicas[]

  @@map("artistas")
}

model Artistas_Musicas {
  id                               String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  artista_id                       String   @db.Uuid
  musica_id                        String   @db.Uuid
  bpm                              Int?
  cifras                           String?
  lyrics                           String?
  link_versao                      String?
  artistas_musicas_artista_id_fkey Artistas @relation(fields: [artista_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  artistas_musicas_musica_id_fkey  Musicas  @relation(fields: [musica_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("artistas_musicas")
}

model Eventos {
  id                          String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  data                        DateTime          @db.Date
  fk_tipo_evento              String            @db.Uuid
  descricao                   String
  eventos_fk_tipo_evento_fkey Tipos_Eventos     @relation(fields: [fk_tipo_evento], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Eventos_Musicas             Eventos_Musicas[]
  Eventos_Musicos             Eventos_Musicos[]

  @@map("eventos")
}

model Eventos_Musicas {
  id                              String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  evento_id                       String  @db.Uuid
  musicas_id                      String  @db.Uuid
  eventos_musicas_evento_id_fkey  Eventos @relation(fields: [evento_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  eventos_musicas_musicas_id_fkey Musicas @relation(fields: [musicas_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("eventos_musicas")
}

model Eventos_Musicos {
  id                             String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  evento_id                      String  @db.Uuid
  musico_id                      String  @db.Uuid
  eventos_musicos_evento_id_fkey Eventos @relation(fields: [evento_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  eventos_musicos_musico_id_fkey Musicos @relation(fields: [musico_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("eventos_musicos")
}

model Funcoes {
  id              String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nome            String
  Musicas_Funcoes Musicas_Funcoes[]
  Musicos_Funcoes Musicos_Funcoes[]

  @@map("funcoes")
}

model Musicas {
  id                         String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nome                       String
  fk_tonalidade              String             @db.Uuid
  Artistas_Musicas           Artistas_Musicas[]
  Eventos_Musicas            Eventos_Musicas[]
  musicas_fk_tonalidade_fkey Tonalidades        @relation(fields: [fk_tonalidade], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Musicas_Funcoes            Musicas_Funcoes[]

  @@map("musicas")
}

model Musicas_Funcoes {
  id                             String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  musica_id                      String  @db.Uuid
  funcao_id                      String  @db.Uuid
  musicas_funcoes_funcao_id_fkey Funcoes @relation(fields: [funcao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  musicas_funcoes_musica_id_fkey Musicas @relation(fields: [musica_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("musicas_funcoes")
}

model Musicos {
  id              String            @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nome            String
  doc_id          String            @unique
  Eventos_Musicos Eventos_Musicos[]
  Musicos_Funcoes Musicos_Funcoes[]

  @@map("musicos")
}

model Musicos_Funcoes {
  id                             String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  musico_id                      String  @db.Uuid
  funcao_id                      String  @db.Uuid
  musicos_funcoes_funcao_id_fkey Funcoes @relation(fields: [funcao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  musicos_funcoes_musico_id_fkey Musicos @relation(fields: [musico_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("musicos_funcoes")
}

model Tipos_Eventos {
  id      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  nome    String
  Eventos Eventos[]

  @@map("tipos_eventos")
}

model Tonalidades {
  id      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  tom     String
  Musicas Musicas[]

  @@map("tonalidades")
}
